#!/bin/bash

# kubectl-deploy it's a simple kubectl plugin which renders Kubernetes manifest templates and applies them.

# input parameters
if [[ $# -lt 2 ]]; then
	echo "missing directory and/or config"
	echo "example usage: kubectl deploy examples/ examples/test.config.yaml"
	exit 1
fi
directory=$1
config=$2

# install render if not exist
if ! type render; then
    echo 'render is not installed'
    bin="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
    render_version="v0.0.8"
    echo "Downloading 'render (${render_version})'"
    curl -#L \
      --url "https://github.com/VirtusLab/render/releases/download/${render_version}/render-linux-amd64" \
      --output "${bin}/render"
    chmod +x "${bin}/render"
    echo
fi

# render manifests
templates=`ls ${directory}/*.tmpl`
for template in ${templates}
do
   directory_name=`dirname ${template}`
   output=`basename ${template} .tmpl`
   echo "rendering '${template}' to '${directory_name}/rendered/${output}'"
   mkdir -p "${directory_name}/rendered"
   render --in ${template} --out "${directory_name}/rendered/${output}" --config ${config}
done

# apply manifests
manifests=`ls ${directory}/rendered/*.yaml | grep -v ${config}`
for manifest in ${manifests}
do
   echo "applying '${manifest}'"
   kubectl apply -f ${manifest}
done


